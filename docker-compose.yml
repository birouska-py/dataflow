# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0
services:
  #### STREAMING 
  kafka-broker-df:
    image: docker.io/bitnami/kafka:3.7
    container_name: kafka-broker-df
    hostname: kafka-broker-df
    user: root
    ports:
      - "9092:9092"
      - "9991:9991"
    networks:
      - dataflow_network
    environment:
      # KRaft settings
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-broker-df:29093
      - KAFKA_KRAFT_CLUSTER_ID=kafka-broker-df
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://kafka-broker-df:29092,CONTROLLER://kafka-broker-df:29093,EXTERNAL://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka-broker-df:29092,EXTERNAL://kafka-broker-df:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      #- KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS= 0
      - KAFKA_CFG_NUM_PARTITIONS= 3
      #- KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR= 3
      #- KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR= 3
    volumes:
      - '~/docker_files/volumes/dataflow/kafka:/bitnami/kafka'

  schema-registry-df:
    image: docker.io/bitnami/schema-registry:7.1.12
    container_name: schema-registry-df
    hostname: schema-registry-df
    ports:
      - "8081:8081"
    networks:
      - dataflow_network
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka-broker-df:29092
    depends_on:
      kafka-broker-df:
        condition: service_started

  redpanda-console-df:
    container_name: redpanda-console-df
    hostname: redpanda-console-df
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    restart: unless-stopped
    networks:
      - dataflow_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka-broker-df:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://schema-registry-df:8081"]
    ports:
      - "8080:8080"
    depends_on:
      kafka-broker-df:
        condition: service_started
      schema-registry-df:
        condition: service_started
  
  # DATABASE - RELACIONAL
  postgres-df:
    container_name: postgres-df
    hostname: postgres-df
    image: "postgres:latest"
    networks:
      - dataflow_network
    user: "root"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/data/postgres"
    volumes:
       - ~/docker_files/volumes/dataflow/postgresql:/data/postgres
    ports:
      - "5432:5432"

# DATABASE - NOSQL

  mongo-df:
    image: mongo:latest
    container_name: mongodb-df
    hostname: mongodb-df
    networks:
      - dataflow_network
    ports:
      - 27017:27017
    volumes:
       - ~/docker_files/volumes/dataflow/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express-df:
    image: mongo-express:latest
    container_name: mongo-express-df
    hostname: mongo-express-df
    networks:
      - dataflow_network
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongodb-df:27017/

  kafka-connect-df:
        image: birouskapy/kafka-connect-debezium:v1
        container_name: kafka-connect-df
        hostname: kafka-connect-df
        networks:
          - dataflow_network
        ports:
        - 8083:8083
        depends_on:      
         - kafka-broker-df      
        environment:
        - KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
        - KAFKA_CONNECT_BOOTSTRAP_SERVERS=kafka-broker-df:29092
        - |
            KAFKA_CONNECT_CONFIGURATION=
            key.converter=org.apache.kafka.connect.json.JsonConverter
            value.converter=org.apache.kafka.connect.json.JsonConverter
            key.converter.schemas.enable=false
            value.converter.schemas.enable=false
            group.id=connect
            offset.storage.topic=connect-offsets
            offset.storage.replication.factor=1
            config.storage.topic=connect-configs
            config.storage.replication.factor=1
            status.storage.topic=connect-status
            status.storage.replication.factor=1  
            CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect-df'       
        command: /opt/kafka/kafka_connect_run.sh

networks:
  dataflow_network:
    name: dataflow-network
    driver: bridge

